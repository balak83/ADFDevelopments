{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DFBK1"
		},
		"LS_Destination_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Destination'"
		},
		"LS_Import_CSV_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Import_CSV'"
		},
		"LS_Sourrce_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Sourrce'"
		},
		"LS_SqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SqlServer'"
		},
		"ls_dest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_dest'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_Append_Variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Marks",
							"value": {
								"value": "@variables('input')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "input",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "input",
							"value": 6
						}
					},
					{
						"name": "output",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Append",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "output",
							"value": {
								"value": "@variables('Marks')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"input": {
						"type": "Integer"
					},
					"Marks": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							3,
							4
						]
					},
					"output": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-22T06:12:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "(a+b)2 = a2+b2+2ab",
				"activities": [
					{
						"name": "var b",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "b",
							"value": 10
						}
					},
					{
						"name": "Var a",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "a",
							"value": 5
						}
					},
					{
						"name": "var c",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Var a",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "var b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "c",
							"value": {
								"value": "@add(mul(variables('a'),variables('a')), mul(variables('b'),variables('b')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "var d",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Var a",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "var b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "d",
							"value": {
								"value": "@mul(2,mul(variables('a'),variables('b')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "var result",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "var c",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "var d",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "result",
							"value": {
								"value": "@add(variables('c'),variables('d'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "var result1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "var b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Var a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "result",
							"value": {
								"value": "@add(add(mul(variables('a'),variables('a')), mul(variables('b'),variables('b'))),mul(2,mul(variables('a'),variables('b'))))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"a": {
						"type": "Integer"
					},
					"b": {
						"type": "Integer"
					},
					"c": {
						"type": "Integer"
					},
					"d": {
						"type": "Integer"
					},
					"result": {
						"type": "Integer"
					},
					"result1": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-21T18:00:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_areacalculation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "breth",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "breth",
							"value": 5
						}
					},
					{
						"name": "length",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "length",
							"value": "b"
						}
					},
					{
						"name": "area",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "breth",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "length",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "area",
							"value": {
								"value": "@mul(variables('breth'),variables('length'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"breth": {
						"type": "Integer",
						"defaultValue": 6
					},
					"length": {
						"type": "Integer",
						"defaultValue": 5
					},
					"area": {
						"type": "Integer"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-05T17:05:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_emailnotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Email_notification",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-12.centralindia.logic.azure.com:443/workflows/6565baf82d5141a393399f268d638519/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=VPU3YAK7qG6Mt0TS1ohxU8BlOg7rmAzqGUwa5tOIAYQ",
							"method": "POST",
							"headers": {},
							"body": {
								"To": "saranya.vsp@gmail.com",
								"Subject": "Email notification from ADF",
								"Body": "This is email notification from Azure Data Factory"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-06T17:09:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Destination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_Destination_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Import_CSV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_Import_CSV_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Sourrce')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_Sourrce_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SqlServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_dest_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_increment_load_SCD_Type1_using_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_SCD_Type1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[MOVEDATA_SCDTYPE1]"
						},
						"linkedServiceName": {
							"referenceName": "LS_SqlServer",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-15T16:33:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_DataLoad_Src1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_Name": {
						"type": "string"
					},
					"table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_Name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_DataLoad_Src2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_DataLoad_dst1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_Name": {
						"type": "string"
					},
					"table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_Name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Dataload_Dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": {
						"value": "@dataset().table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Dataload_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Metadata_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sourrce",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Employee ID",
						"type": "String"
					},
					{
						"name": "Full Name",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sourrce')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SCDT2_Src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "empId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblEmployee_SCDT2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Employee ID",
						"type": "String"
					},
					{
						"name": "Full Name",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sourrce",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name_ds": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name_ds",
							"type": "Expression"
						},
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Employee ID",
						"type": "String"
					},
					{
						"name": "Full Name",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sourrce')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_emp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Import_CSV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "tblEmployee.csv",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empId",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Import_CSV')]"
			]
		}
	]
}